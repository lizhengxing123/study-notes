{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "funderIndex",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xc28eaa3f1feb87676e2e16112d2a557e3beafd5d95b8103b8806de9cb3435a5b",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "990072",
    "logsBloom": "0x
    "blockHash": "0xa0e388378d2ce57f96a3f9ed4019251dbcfaf97a59865cd374d5f0878750885a",
    "transactionHash": "0xc28eaa3f1feb87676e2e16112d2a557e3beafd5d95b8103b8806de9cb3435a5b",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "990072",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "f0e614c14ba292f2c9941398dfbd31b9",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"funderIndex\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"lizhengxing\",\"details\":\"\\u5f00\\u53d1\\u4eba\\u5458\\u4f7f\\u7528\",\"kind\":\"dev\",\"methods\":{\"fund()\":{\"details\":\"\\u4f7f\\u7528\\u4e86\\u5582\\u4ef7\"}},\"title\":\"\\u4f17\\u7b79\\u5408\\u7ea6\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"\\u5411\\u672c\\u5408\\u7ea6\\u8f6c\\u8d26\"}},\"notice\":\"demo\\u5408\\u7ea6\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// pragma\\npragma solidity ^0.8.8;\\n// import\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n// error\\nerror FundMe__NotOwner();\\n\\n// interface\\n// library\\n// contract\\n\\n/// @title \\u4f17\\u7b79\\u5408\\u7ea6\\n/// @author lizhengxing\\n/// @notice demo\\u5408\\u7ea6\\n/// @dev \\u5f00\\u53d1\\u4eba\\u5458\\u4f7f\\u7528\\ncontract FundMe {\\n    // \\u7c7b\\u578b\\u58f0\\u660e\\n    using PriceConverter for uint256;\\n\\n    // \\u72b6\\u6001\\u53d8\\u91cf\\n    uint256 public constant MINIMUM_USD = 50 * 10**18;\\n    address private immutable i_owner;\\n    address[] private s_funders;\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    // events\\n\\n    // modifiers\\n    modifier onlyOwner() {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    // functions\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    // receive() external payable {\\n    //     fund();\\n    // }\\n\\n    // fallback() external payable {\\n    //     fund();\\n    // }\\n\\n    /**\\n     * @notice \\u5411\\u672c\\u5408\\u7ea6\\u8f6c\\u8d26\\n     * @dev \\u4f7f\\u7528\\u4e86\\u5582\\u4ef7\\n     */\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"You need to spend more ETH!\\\"\\n        );\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public onlyOwner {\\n        address[] memory funders = s_funders;\\n        uint256 len = funders.length;\\n        for (uint256 funderIndex = 0; funderIndex < len; ++funderIndex) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 funderIndex) public view returns (address) {\\n        return s_funders[funderIndex];\\n    }\\n\\n    function getAddressToAmountFunded(address funder)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0xd832c221d82faf9348af66bd1239cfa5d90fb1956c9a40d89cdd578f9194277e\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n        // or (Both will do the same thing)\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // or (Both will do the same thing)\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x03051d7dee7664301ac9daa006156decaa2bc64d2ecfc91fe35499cbaca42dc2\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620012033803806200120383398181016040528101906200003791906200011d565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200014f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e582620000b8565b9050919050565b620000f781620000d8565b81146200010357600080fd5b50565b6000815190506200011781620000ec565b92915050565b600060208284031215620001365762000135620000b3565b5b6000620001468482850162000106565b91505092915050565b60805161108a62000179600039600081816101fe0152818161044d01526105d8015261108a6000f3fe60806040526004361061007b5760003560e01c80639e87a5cd1161004e5780639e87a5cd1461012a578063b60d428814610155578063be2693f01461015f578063d7b4750c146101765761007b565b80630343fb25146100805780633ccfd60b146100bd5780636b69a592146100d4578063893d20e8146100ff575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610a9c565b6101b3565b6040516100b49190610ae2565b60405180910390f35b3480156100c957600080fd5b506100d26101fc565b005b3480156100e057600080fd5b506100e961043c565b6040516100f69190610ae2565b60405180910390f35b34801561010b57600080fd5b50610114610449565b6040516101219190610b0c565b60405180910390f35b34801561013657600080fd5b5061013f610471565b60405161014c9190610b86565b60405180910390f35b61015d61049b565b005b34801561016b57600080fd5b506101746105d6565b005b34801561018257600080fd5b5061019d60048036038101906101989190610bcd565b61087e565b6040516101aa9190610b0c565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610281576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561032c5760008082815481106102a6576102a5610bfa565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061032490610c58565b915050610284565b50600067ffffffffffffffff81111561034857610347610ca0565b5b6040519080825280602002602001820160405280156103765781602001602082028036833780820191505090505b506000908051906020019061038c929190610992565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103b390610d00565b60006040518083038185875af1925050503d80600081146103f0576040519150601f19603f3d011682016040523d82523d6000602084013e6103f5565b606091505b5050905080610439576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043090610d72565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b18800006104da600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108c590919063ffffffff16565b101561051b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051290610dde565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461056a9190610dfe565b925050819055506000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461065b576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106de57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610694575b5050505050905060008151905060005b8181101561076c57600083828151811061070b5761070a610bfa565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508061076590610c58565b90506106ee565b50600067ffffffffffffffff81111561078857610787610ca0565b5b6040519080825280602002602001820160405280156107b65781602001602082028036833780820191505090505b50600090805190602001906107cc929190610992565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516107f390610d00565b60006040518083038185875af1925050503d8060008114610830576040519150601f19603f3d011682016040523d82523d6000602084013e610835565b606091505b5050905080610879576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087090610d72565b60405180910390fd5b505050565b600080828154811061089357610892610bfa565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108d183610901565b90506000670de0b6b3a764000085836108ea9190610e32565b6108f49190610ea3565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561094f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109739190610f61565b5050509150506402540be4008161098a9190610fdc565b915050919050565b828054828255906000526020600020908101928215610a0b579160200282015b82811115610a0a5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109b2565b5b509050610a189190610a1c565b5090565b5b80821115610a35576000816000905550600101610a1d565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a6982610a3e565b9050919050565b610a7981610a5e565b8114610a8457600080fd5b50565b600081359050610a9681610a70565b92915050565b600060208284031215610ab257610ab1610a39565b5b6000610ac084828501610a87565b91505092915050565b6000819050919050565b610adc81610ac9565b82525050565b6000602082019050610af76000830184610ad3565b92915050565b610b0681610a5e565b82525050565b6000602082019050610b216000830184610afd565b92915050565b6000819050919050565b6000610b4c610b47610b4284610a3e565b610b27565b610a3e565b9050919050565b6000610b5e82610b31565b9050919050565b6000610b7082610b53565b9050919050565b610b8081610b65565b82525050565b6000602082019050610b9b6000830184610b77565b92915050565b610baa81610ac9565b8114610bb557600080fd5b50565b600081359050610bc781610ba1565b92915050565b600060208284031215610be357610be2610a39565b5b6000610bf184828501610bb8565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c6382610ac9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610c9557610c94610c29565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610cea600083610ccf565b9150610cf582610cda565b600082019050919050565b6000610d0b82610cdd565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d5c600b83610d15565b9150610d6782610d26565b602082019050919050565b60006020820190508181036000830152610d8b81610d4f565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610dc8601b83610d15565b9150610dd382610d92565b602082019050919050565b60006020820190508181036000830152610df781610dbb565b9050919050565b6000610e0982610ac9565b9150610e1483610ac9565b9250828201905080821115610e2c57610e2b610c29565b5b92915050565b6000610e3d82610ac9565b9150610e4883610ac9565b9250828202610e5681610ac9565b91508282048414831517610e6d57610e6c610c29565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610eae82610ac9565b9150610eb983610ac9565b925082610ec957610ec8610e74565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610ef381610ed4565b8114610efe57600080fd5b50565b600081519050610f1081610eea565b92915050565b6000819050919050565b610f2981610f16565b8114610f3457600080fd5b50565b600081519050610f4681610f20565b92915050565b600081519050610f5b81610ba1565b92915050565b600080600080600060a08688031215610f7d57610f7c610a39565b5b6000610f8b88828901610f01565b9550506020610f9c88828901610f37565b9450506040610fad88828901610f4c565b9350506060610fbe88828901610f4c565b9250506080610fcf88828901610f01565b9150509295509295909350565b6000610fe782610f16565b9150610ff283610f16565b925082820261100081610f16565b91507f8000000000000000000000000000000000000000000000000000000000000000841460008412161561103857611037610c29565b5b828205841483151761104d5761104c610c29565b5b509291505056fea26469706673582212202ea4e69ee066c039fba6ee8a34ac1d3fd56d3d2b0010f6a611b2e125aac9d61564736f6c63430008110033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c80639e87a5cd1161004e5780639e87a5cd1461012a578063b60d428814610155578063be2693f01461015f578063d7b4750c146101765761007b565b80630343fb25146100805780633ccfd60b146100bd5780636b69a592146100d4578063893d20e8146100ff575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610a9c565b6101b3565b6040516100b49190610ae2565b60405180910390f35b3480156100c957600080fd5b506100d26101fc565b005b3480156100e057600080fd5b506100e961043c565b6040516100f69190610ae2565b60405180910390f35b34801561010b57600080fd5b50610114610449565b6040516101219190610b0c565b60405180910390f35b34801561013657600080fd5b5061013f610471565b60405161014c9190610b86565b60405180910390f35b61015d61049b565b005b34801561016b57600080fd5b506101746105d6565b005b34801561018257600080fd5b5061019d60048036038101906101989190610bcd565b61087e565b6040516101aa9190610b0c565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610281576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561032c5760008082815481106102a6576102a5610bfa565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061032490610c58565b915050610284565b50600067ffffffffffffffff81111561034857610347610ca0565b5b6040519080825280602002602001820160405280156103765781602001602082028036833780820191505090505b506000908051906020019061038c929190610992565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103b390610d00565b60006040518083038185875af1925050503d80600081146103f0576040519150601f19603f3d011682016040523d82523d6000602084013e6103f5565b606091505b5050905080610439576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043090610d72565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b18800006104da600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108c590919063ffffffff16565b101561051b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051290610dde565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461056a9190610dfe565b925050819055506000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461065b576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106de57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610694575b5050505050905060008151905060005b8181101561076c57600083828151811061070b5761070a610bfa565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508061076590610c58565b90506106ee565b50600067ffffffffffffffff81111561078857610787610ca0565b5b6040519080825280602002602001820160405280156107b65781602001602082028036833780820191505090505b50600090805190602001906107cc929190610992565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516107f390610d00565b60006040518083038185875af1925050503d8060008114610830576040519150601f19603f3d011682016040523d82523d6000602084013e610835565b606091505b5050905080610879576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087090610d72565b60405180910390fd5b505050565b600080828154811061089357610892610bfa565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108d183610901565b90506000670de0b6b3a764000085836108ea9190610e32565b6108f49190610ea3565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561094f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109739190610f61565b5050509150506402540be4008161098a9190610fdc565b915050919050565b828054828255906000526020600020908101928215610a0b579160200282015b82811115610a0a5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109b2565b5b509050610a189190610a1c565b5090565b5b80821115610a35576000816000905550600101610a1d565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a6982610a3e565b9050919050565b610a7981610a5e565b8114610a8457600080fd5b50565b600081359050610a9681610a70565b92915050565b600060208284031215610ab257610ab1610a39565b5b6000610ac084828501610a87565b91505092915050565b6000819050919050565b610adc81610ac9565b82525050565b6000602082019050610af76000830184610ad3565b92915050565b610b0681610a5e565b82525050565b6000602082019050610b216000830184610afd565b92915050565b6000819050919050565b6000610b4c610b47610b4284610a3e565b610b27565b610a3e565b9050919050565b6000610b5e82610b31565b9050919050565b6000610b7082610b53565b9050919050565b610b8081610b65565b82525050565b6000602082019050610b9b6000830184610b77565b92915050565b610baa81610ac9565b8114610bb557600080fd5b50565b600081359050610bc781610ba1565b92915050565b600060208284031215610be357610be2610a39565b5b6000610bf184828501610bb8565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c6382610ac9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610c9557610c94610c29565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610cea600083610ccf565b9150610cf582610cda565b600082019050919050565b6000610d0b82610cdd565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d5c600b83610d15565b9150610d6782610d26565b602082019050919050565b60006020820190508181036000830152610d8b81610d4f565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610dc8601b83610d15565b9150610dd382610d92565b602082019050919050565b60006020820190508181036000830152610df781610dbb565b9050919050565b6000610e0982610ac9565b9150610e1483610ac9565b9250828201905080821115610e2c57610e2b610c29565b5b92915050565b6000610e3d82610ac9565b9150610e4883610ac9565b9250828202610e5681610ac9565b91508282048414831517610e6d57610e6c610c29565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610eae82610ac9565b9150610eb983610ac9565b925082610ec957610ec8610e74565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610ef381610ed4565b8114610efe57600080fd5b50565b600081519050610f1081610eea565b92915050565b6000819050919050565b610f2981610f16565b8114610f3457600080fd5b50565b600081519050610f4681610f20565b92915050565b600081519050610f5b81610ba1565b92915050565b600080600080600060a08688031215610f7d57610f7c610a39565b5b6000610f8b88828901610f01565b9550506020610f9c88828901610f37565b9450506040610fad88828901610f4c565b9350506060610fbe88828901610f4c565b9250506080610fcf88828901610f01565b9150509295509295909350565b6000610fe782610f16565b9150610ff283610f16565b925082820261100081610f16565b91507f8000000000000000000000000000000000000000000000000000000000000000841460008412161561103857611037610c29565b5b828205841483151761104d5761104c610c29565b5b509291505056fea26469706673582212202ea4e69ee066c039fba6ee8a34ac1d3fd56d3d2b0010f6a611b2e125aac9d61564736f6c63430008110033",
  "devdoc": {
    "author": "lizhengxing",
    "details": "开发人员使用",
    "kind": "dev",
    "methods": {
      "fund()": {
        "details": "使用了喂价"
      }
    },
    "title": "众筹合约",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "fund()": {
        "notice": "向本合约转账"
      }
    },
    "notice": "demo合约",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 67,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 74,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}