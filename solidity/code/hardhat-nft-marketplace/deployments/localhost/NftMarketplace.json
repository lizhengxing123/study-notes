{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "NftMarketplace__AlreadyListed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NftMarketplace__NoProceeds",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NftMarketplace__NotApprovedForMarketplace",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "NftMarketplace__NotListed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NftMarketplace__NotOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nftPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "actualPrice",
          "type": "uint256"
        }
      ],
      "name": "NftMarketplace__NotPayEnough",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NftMarketplace__PriceMustBeAboveZero",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NftMarketplace__TransferFailed",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "ItemListed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nftPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "transactionPrice",
          "type": "uint256"
        }
      ],
      "name": "itemBought",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "itemCanceled",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "buyItem",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "cancelListing",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getListing",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            }
          ],
          "internalType": "struct NftMarketplace.Listing",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        }
      ],
      "name": "getProceeds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "listItem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "newPrice",
          "type": "uint256"
        }
      ],
      "name": "updateListing",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawProceeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x0f290cb2facec3e7ec74068953eee76ffdd0c767f9f4159a3f6a2fc961a1c78e",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "1261603",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x8f251dbab0c4d33963434052dfb5992b1ac8f0149ad63cdcd9cffef07e090975",
    "transactionHash": "0x0f290cb2facec3e7ec74068953eee76ffdd0c767f9f4159a3f6a2fc961a1c78e",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "1261603",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "83389fb183f22e315b4aa84de4deae5a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"NftMarketplace__AlreadyListed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NftMarketplace__NoProceeds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NftMarketplace__NotApprovedForMarketplace\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"NftMarketplace__NotListed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NftMarketplace__NotOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nftPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actualPrice\",\"type\":\"uint256\"}],\"name\":\"NftMarketplace__NotPayEnough\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NftMarketplace__PriceMustBeAboveZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NftMarketplace__TransferFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"ItemListed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nftPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"transactionPrice\",\"type\":\"uint256\"}],\"name\":\"itemBought\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"itemCanceled\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"buyItem\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"cancelListing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getListing\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"internalType\":\"struct NftMarketplace.Listing\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"name\":\"getProceeds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"listItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"updateListing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawProceeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Zhengxing Li\",\"details\":\"\\u9700\\u8981\\u9632\\u6b62\\u91cd\\u5165\\u653b\\u51fb\",\"kind\":\"dev\",\"methods\":{\"buyItem(address,uint256)\":{\"details\":\"\\u5916\\u90e8\\u8c03\\u7528\\uff0c\\u5e76\\u4e14\\u9700\\u8981\\u652f\\u4ed8\\u9700\\u8981\\u9632\\u6b62\\u91cd\\u5165\\u653b\\u51fb\\u65b9\\u6cd5\\u4e00\\uff1a\\u68c0\\u67e5-\\u751f\\u6548-\\u4ea4\\u4e92\\uff08Checks-Effects-Interactions\\uff09\\u6a21\\u5f0f\\u65b9\\u6cd5\\u4e8c\\uff1a\\u4e92\\u65a5\\u9501 => openzeppelin\",\"params\":{\"nftAddress\":\"NFT \\u5408\\u7ea6\\u5730\\u5740\",\"tokenId\":\"NFT tokenId\"}},\"cancelListing(address,uint256)\":{\"params\":{\"nftAddress\":\"NFT \\u5408\\u7ea6\\u5730\\u5740\",\"tokenId\":\"NFT tokenId\"}},\"getListing(address,uint256)\":{\"params\":{\"nftAddress\":\"NFT \\u5408\\u7ea6\\u5730\\u5740\",\"tokenId\":\"NFT tokenId\"}},\"listItem(address,uint256,uint256)\":{\"details\":\"\\u4e0a\\u67b6\\uff0c\\u53ea\\u80fd\\u5916\\u90e8\\u8c03\\u7528\\u4f7f\\u7528\\u4e86 getApproved \\u65b9\\u6cd5\\uff0c\\u6388\\u4e88\\u5f53\\u524d\\u5408\\u7ea6\\u53bb\\u51fa\\u552e\\u5356\\u5bb6\\u7684 NFT\",\"params\":{\"nftAddress\":\"NFT \\u5408\\u7ea6\\u5730\\u5740\",\"price\":\"NFT \\u4ef7\\u683c\",\"tokenId\":\"NFT tokenId\"}},\"updateListing(address,uint256,uint256)\":{\"params\":{\"newPrice\":\"\\u65b0\\u7684\\u4ef7\\u683c\",\"nftAddress\":\"NFT \\u5408\\u7ea6\\u5730\\u5740\",\"tokenId\":\"NFT tokenId\"}},\"withdrawProceeds()\":{\"details\":\"\\u9632\\u6b62\\u91cd\\u5165\\u653b\\u51fb\\u65b9\\u6cd5\\u4e00\\uff1a\\u68c0\\u67e5-\\u751f\\u6548-\\u4ea4\\u4e92\\uff08Checks-Effects-Interactions\\uff09\\u6a21\\u5f0f\\u65b9\\u6cd5\\u4e8c\\uff1a\\u4e92\\u65a5\\u9501 => openzeppelin\"}},\"title\":\"NFT \\u4ea4\\u6613\\u5e02\\u573a\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"buyItem(address,uint256)\":{\"notice\":\"\\u8fd9\\u4e2a\\u65b9\\u6cd5\\u7528\\u4e8e\\u8d2d\\u4e70\\u5e02\\u573a\\u4e0a\\u7684 NFT\"},\"cancelListing(address,uint256)\":{\"notice\":\"\\u8fd9\\u4e2a\\u65b9\\u6cd5\\u7528\\u4e8e\\u4e0b\\u67b6\\u4f60\\u7684 NFT\"},\"getListing(address,uint256)\":{\"notice\":\"\\u8fd9\\u4e2a\\u65b9\\u6cd5\\u7528\\u4e8e\\u83b7\\u53d6\\u5e02\\u573a\\u4e0a\\u7684 NFT\"},\"getProceeds(address)\":{\"notice\":\"\\u8fd9\\u4e2a\\u65b9\\u6cd5\\u7528\\u4e8e\\u83b7\\u53d6\\u5356\\u5bb6\\u7684\\u6536\\u76ca\"},\"listItem(address,uint256,uint256)\":{\"notice\":\"\\u8fd9\\u4e2a\\u65b9\\u6cd5\\u7528\\u4e8e\\u5c06\\u4f60\\u7684 NFT \\u4e0a\\u67b6\\u5230\\u5e02\\u573a\"},\"updateListing(address,uint256,uint256)\":{\"notice\":\"\\u8fd9\\u4e2a\\u65b9\\u6cd5\\u7528\\u4e8e\\u66f4\\u65b0\\u4f60\\u7684 NFT \\u7684\\u4ef7\\u683c\"},\"withdrawProceeds()\":{\"notice\":\"\\u8fd9\\u4e2a\\u65b9\\u6cd5\\u7528\\u4e8e\\u5356\\u5bb6\\u63d0\\u53d6\\u6536\\u76ca\"}},\"notice\":\"\\u63d0\\u4f9b NFT \\u7684\\u4e0a\\u67b6\\u3001\\u4e0b\\u67b6\\u3001\\u8d2d\\u4e70\\u3001\\u66f4\\u65b0\\u548c\\u63d0\\u53d6\\u6536\\u76ca\\u529f\\u80fd\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NftMarketplace.sol\":\"NftMarketplace\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/NftMarketplace.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.7;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\n\\n// \\u4e0a\\u67b6\\u7684 NFT \\u4ef7\\u683c\\u5fc5\\u987b\\u5927\\u4e8e 0\\nerror NftMarketplace__PriceMustBeAboveZero();\\n// \\u5f53\\u524d NFT \\u6ca1\\u6709\\u7ed9\\u5e02\\u573a\\u5408\\u7ea6\\u6279\\u51c6\\nerror NftMarketplace__NotApprovedForMarketplace();\\n// NFT \\u5df2\\u7ecf\\u4e0a\\u67b6\\u4e86\\nerror NftMarketplace__AlreadyListed(address nftAddress, uint256 tokenId);\\n// NFT \\u8fd8\\u6ca1\\u6709\\u4e0a\\u67b6\\nerror NftMarketplace__NotListed(address nftAddress, uint256 tokenId);\\n// \\u4e0d\\u662f\\u5f53\\u524d NFT \\u7684\\u6240\\u6709\\u8005\\nerror NftMarketplace__NotOwner();\\n// \\u8d2d\\u4e70 NFT \\u7684\\u91d1\\u989d\\u4e0d\\u8db3\\nerror NftMarketplace__NotPayEnough(\\n    address nftAddress,\\n    uint256 tokenId,\\n    uint256 nftPrice,\\n    uint256 actualPrice\\n);\\n// \\u6ca1\\u6709\\u6536\\u76ca\\nerror NftMarketplace__NoProceeds();\\n// \\u63d0\\u53d6\\u6536\\u76ca\\u5931\\u8d25\\nerror NftMarketplace__TransferFailed();\\n\\n/**\\n * @title NFT \\u4ea4\\u6613\\u5e02\\u573a\\n * @author Zhengxing Li\\n * @notice \\u63d0\\u4f9b NFT \\u7684\\u4e0a\\u67b6\\u3001\\u4e0b\\u67b6\\u3001\\u8d2d\\u4e70\\u3001\\u66f4\\u65b0\\u548c\\u63d0\\u53d6\\u6536\\u76ca\\u529f\\u80fd\\n * @dev \\u9700\\u8981\\u9632\\u6b62\\u91cd\\u5165\\u653b\\u51fb\\n */\\ncontract NftMarketplace {\\n    // NFT \\u51fa\\u552e\\u5bf9\\u8c61\\n    struct Listing {\\n        uint256 price; // \\u4ef7\\u683c\\n        address seller; // \\u5356\\u5bb6\\n    }\\n\\n    // NFT \\u5408\\u7ea6\\u5730\\u5740 -> NFT TokenId -> NFT \\u51fa\\u552e\\u5bf9\\u8c61\\n    mapping(address => mapping(uint256 => Listing)) private s_listings;\\n    // \\u5356\\u5bb6 -> \\u5df2\\u5356\\u51fa\\u7684\\u91d1\\u989d\\uff08\\u6536\\u76ca\\uff09\\n    mapping(address => uint256) private s_proceeds;\\n\\n    // \\u5217\\u8868\\u9879\\u589e\\u52a0\\n    event ItemListed(\\n        address indexed seller,\\n        address indexed nftAddress,\\n        uint256 indexed tokenId,\\n        uint256 price\\n    );\\n    // \\u8d2d\\u4e70 NFT\\n    event itemBought(\\n        address indexed buyer,\\n        address indexed nftAddress,\\n        uint256 indexed tokenId,\\n        uint256 nftPrice,\\n        uint256 transactionPrice\\n    );\\n    // \\u4e0b\\u67b6 NFT\\n    event itemCanceled(address indexed seller, address indexed nftAddress, uint256 indexed tokenId);\\n\\n    // NFT \\u6ca1\\u6709\\u6dfb\\u52a0\\u5230\\u5e02\\u573a\\n    modifier notListed(address nftAddress, uint256 tokenId) {\\n        // NFT \\u5bf9\\u8c61\\n        Listing memory listing = s_listings[nftAddress][tokenId];\\n        if (listing.price > 0) {\\n            // NFT \\u5df2\\u7ecf\\u4e0a\\u67b6\\u4e86\\n            revert NftMarketplace__AlreadyListed(nftAddress, tokenId);\\n        }\\n        _;\\n    }\\n\\n    // NFT \\u5df2\\u7ecf\\u6dfb\\u52a0\\u5230\\u5e02\\u573a\\n    modifier isListed(address nftAddress, uint256 tokenId) {\\n        // NFT \\u5bf9\\u8c61\\n        Listing memory listing = s_listings[nftAddress][tokenId];\\n        if (listing.price <= 0) {\\n            // NFT \\u8fd8\\u6ca1\\u6709\\u4e0a\\u67b6\\n            revert NftMarketplace__NotListed(nftAddress, tokenId);\\n        }\\n        _;\\n    }\\n\\n    // \\u662f\\u5f53\\u524d NFT \\u7684\\u6240\\u6709\\u8005\\n    modifier isOwner(\\n        address nftAddress,\\n        uint256 tokenId,\\n        address seller\\n    ) {\\n        IERC721 nft = IERC721(nftAddress);\\n        if (nft.ownerOf(tokenId) != seller) {\\n            // \\u4e0d\\u662f\\u5f53\\u524d NFT \\u7684\\u6240\\u6709\\u8005\\n            revert NftMarketplace__NotOwner();\\n        }\\n        _;\\n    }\\n\\n    /**\\n     * @notice \\u8fd9\\u4e2a\\u65b9\\u6cd5\\u7528\\u4e8e\\u5c06\\u4f60\\u7684 NFT \\u4e0a\\u67b6\\u5230\\u5e02\\u573a\\n     * @dev \\u4e0a\\u67b6\\uff0c\\u53ea\\u80fd\\u5916\\u90e8\\u8c03\\u7528\\n     * @dev \\u4f7f\\u7528\\u4e86 getApproved \\u65b9\\u6cd5\\uff0c\\u6388\\u4e88\\u5f53\\u524d\\u5408\\u7ea6\\u53bb\\u51fa\\u552e\\u5356\\u5bb6\\u7684 NFT\\n     * @param nftAddress NFT \\u5408\\u7ea6\\u5730\\u5740\\n     * @param tokenId NFT tokenId\\n     * @param price NFT \\u4ef7\\u683c\\n     */\\n    function listItem(\\n        address nftAddress,\\n        uint256 tokenId,\\n        uint256 price\\n    ) external notListed(nftAddress, tokenId) isOwner(nftAddress, tokenId, msg.sender) {\\n        if (price <= 0) {\\n            // \\u4e0a\\u67b6\\u7684 NFT \\u4ef7\\u683c\\u5fc5\\u987b\\u5927\\u4e8e 0\\n            revert NftMarketplace__PriceMustBeAboveZero();\\n        }\\n        // NFT \\u7684\\u6240\\u6709\\u8005\\u53ef\\u4ee5\\u7ed9\\u5e02\\u573a\\uff08\\u5f53\\u524d\\u5408\\u7ea6\\uff09\\u6279\\u51c6\\uff0c\\u53bb\\u51fa\\u552e\\u4ed6\\u4eec\\u7684 NFT\\n        // \\u9700\\u8981\\u8c03\\u7528 IERC721 \\u91cc\\u9762\\u7684 getApproved\\n        IERC721 nft = IERC721(nftAddress);\\n        // \\u5224\\u65ad\\u662f\\u5426\\u5df2\\u7ecf\\u6279\\u51c6\\u5f53\\u524d\\u5408\\u7ea6\\n        if (nft.getApproved(tokenId) != address(this)) {\\n            // \\u5f53\\u524d NFT \\u6ca1\\u6709\\u7ed9\\u5e02\\u573a\\u5408\\u7ea6\\u6279\\u51c6\\n            revert NftMarketplace__NotApprovedForMarketplace();\\n        }\\n        // \\u4fdd\\u5b58\\u6570\\u636e\\n        s_listings[nftAddress][tokenId] = Listing(price, msg.sender);\\n        // \\u89e6\\u53d1\\u4e8b\\u4ef6\\n        emit ItemListed(msg.sender, nftAddress, tokenId, price);\\n    }\\n\\n    /**\\n     * @notice \\u8fd9\\u4e2a\\u65b9\\u6cd5\\u7528\\u4e8e\\u8d2d\\u4e70\\u5e02\\u573a\\u4e0a\\u7684 NFT\\n     * @dev \\u5916\\u90e8\\u8c03\\u7528\\uff0c\\u5e76\\u4e14\\u9700\\u8981\\u652f\\u4ed8\\n     * @dev \\u9700\\u8981\\u9632\\u6b62\\u91cd\\u5165\\u653b\\u51fb\\n     * @dev \\u65b9\\u6cd5\\u4e00\\uff1a\\u68c0\\u67e5-\\u751f\\u6548-\\u4ea4\\u4e92\\uff08Checks-Effects-Interactions\\uff09\\u6a21\\u5f0f\\n     * @dev \\u65b9\\u6cd5\\u4e8c\\uff1a\\u4e92\\u65a5\\u9501 => openzeppelin\\n     * @param nftAddress NFT \\u5408\\u7ea6\\u5730\\u5740\\n     * @param tokenId NFT tokenId\\n     */\\n    function buyItem(address nftAddress, uint256 tokenId)\\n        external\\n        payable\\n        /** nonReentrant \\u4e92\\u65a5\\u9501\\u4fee\\u9970\\u7b26 */\\n        isListed(nftAddress, tokenId)\\n    {\\n        // NFT \\u5bf9\\u8c61\\n        Listing memory listing = s_listings[nftAddress][tokenId];\\n        if (listing.price > msg.value) {\\n            // \\u8d2d\\u4e70 NFT \\u7684\\u91d1\\u989d\\u4e0d\\u8db3\\n            revert NftMarketplace__NotPayEnough(nftAddress, tokenId, listing.price, msg.value);\\n        }\\n        // \\u66f4\\u65b0\\u5356\\u5bb6\\u7684\\u6536\\u76ca\\n        s_proceeds[listing.seller] += msg.value;\\n        // \\u5220\\u9664\\u5217\\u8868\\u91cc\\u7684\\u8fd9\\u4e2aNFT -- \\u68c0\\u67e5-\\u751f\\u6548-\\u4ea4\\u4e92\\u6a21\\u5f0f\\n        delete (s_listings[nftAddress][tokenId]);\\n        // \\u8f6c\\u79fb NFT - \\u53ef\\u80fd\\u4f1a\\u6709\\u91cd\\u5165\\u653b\\u51fb\\n        IERC721(nftAddress).safeTransferFrom(listing.seller, msg.sender, tokenId);\\n        // \\u89e6\\u53d1\\u4e8b\\u4ef6\\n        emit itemBought(msg.sender, nftAddress, tokenId, listing.price, msg.value);\\n    }\\n\\n    /**\\n     * @notice \\u8fd9\\u4e2a\\u65b9\\u6cd5\\u7528\\u4e8e\\u4e0b\\u67b6\\u4f60\\u7684 NFT\\n     * @param nftAddress NFT \\u5408\\u7ea6\\u5730\\u5740\\n     * @param tokenId NFT tokenId\\n     */\\n    function cancelListing(address nftAddress, uint256 tokenId)\\n        external\\n        isListed(nftAddress, tokenId)\\n        isOwner(nftAddress, tokenId, msg.sender)\\n    {\\n        // \\u5220\\u9664\\u5217\\u8868\\u91cc\\u7684\\u8fd9\\u4e2aNFT\\n        delete (s_listings[nftAddress][tokenId]);\\n        // \\u89e6\\u53d1\\u4e8b\\u4ef6\\n        emit itemCanceled(msg.sender, nftAddress, tokenId);\\n    }\\n\\n    /**\\n     * @notice \\u8fd9\\u4e2a\\u65b9\\u6cd5\\u7528\\u4e8e\\u66f4\\u65b0\\u4f60\\u7684 NFT \\u7684\\u4ef7\\u683c\\n     * @param nftAddress NFT \\u5408\\u7ea6\\u5730\\u5740\\n     * @param tokenId NFT tokenId\\n     * @param newPrice \\u65b0\\u7684\\u4ef7\\u683c\\n     */\\n    function updateListing(\\n        address nftAddress,\\n        uint256 tokenId,\\n        uint256 newPrice\\n    ) external isListed(nftAddress, tokenId) isOwner(nftAddress, tokenId, msg.sender) {\\n        s_listings[nftAddress][tokenId].price = newPrice;\\n        // \\u89e6\\u53d1\\u4e8b\\u4ef6 -- \\u91cd\\u65b0\\u5217\\u51fa\\u6765\\u5c31\\u53ef\\u4ee5\\n        emit ItemListed(msg.sender, nftAddress, tokenId, newPrice);\\n    }\\n\\n    /**\\n     * @notice \\u8fd9\\u4e2a\\u65b9\\u6cd5\\u7528\\u4e8e\\u5356\\u5bb6\\u63d0\\u53d6\\u6536\\u76ca\\n     * @dev \\u9632\\u6b62\\u91cd\\u5165\\u653b\\u51fb\\n     * @dev \\u65b9\\u6cd5\\u4e00\\uff1a\\u68c0\\u67e5-\\u751f\\u6548-\\u4ea4\\u4e92\\uff08Checks-Effects-Interactions\\uff09\\u6a21\\u5f0f\\n     * @dev \\u65b9\\u6cd5\\u4e8c\\uff1a\\u4e92\\u65a5\\u9501 => openzeppelin\\n     */\\n    function withdrawProceeds() external {\\n        // \\u6536\\u76ca\\n        uint256 proceeds = s_proceeds[msg.sender];\\n        if (proceeds <= 0) {\\n            // \\u6ca1\\u6709\\u6536\\u76ca\\n            revert NftMarketplace__NoProceeds();\\n        }\\n        s_proceeds[msg.sender] = 0;\\n        (bool success, ) = payable(msg.sender).call{value: proceeds}(\\\"\\\");\\n        if (!success) {\\n            // \\u63d0\\u53d6\\u5931\\u8d25\\n            revert NftMarketplace__TransferFailed();\\n        }\\n    }\\n\\n    /**\\n     * @notice \\u8fd9\\u4e2a\\u65b9\\u6cd5\\u7528\\u4e8e\\u83b7\\u53d6\\u5e02\\u573a\\u4e0a\\u7684 NFT\\n     * @param nftAddress NFT \\u5408\\u7ea6\\u5730\\u5740\\n     * @param tokenId NFT tokenId\\n     */\\n    function getListing(address nftAddress, uint256 tokenId) public view returns (Listing memory) {\\n        return s_listings[nftAddress][tokenId];\\n    }\\n\\n    /**\\n     * @notice \\u8fd9\\u4e2a\\u65b9\\u6cd5\\u7528\\u4e8e\\u83b7\\u53d6\\u5356\\u5bb6\\u7684\\u6536\\u76ca\\n     */\\n    function getProceeds(address seller) public view returns (uint256) {\\n        return s_proceeds[seller];\\n    }\\n}\\n\",\"keccak256\":\"0x169653da36d7ec0d62f637a6f32f443644b95ba4601c21499271e81695f8c56b\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506115f3806100206000396000f3fe6080604052600436106100705760003560e01c80639038e6931161004e5780639038e693146101185780639f37092a1461012f578063b2ddee061461014b578063f772adf11461017457610070565b806330cfeda91461007557806388700d1c146100b257806389bfd38f146100ef575b600080fd5b34801561008157600080fd5b5061009c6004803603810190610097919061126d565b61019d565b6040516100a991906112b3565b60405180910390f35b3480156100be57600080fd5b506100d960048036038101906100d491906112fa565b6101e6565b6040516100e69190611387565b60405180910390f35b3480156100fb57600080fd5b50610116600480360381019061011191906113a2565b6102b0565b005b34801561012457600080fd5b5061012d610700565b005b610149600480360381019061014491906112fa565b61086a565b005b34801561015757600080fd5b50610172600480360381019061016d91906112fa565b610c48565b005b34801561018057600080fd5b5061019b600480360381019061019691906113a2565b610f20565b005b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6101ee6111da565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905092915050565b828260008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090506000816000015111156103bc5782826040517fc2f0d7090000000000000000000000000000000000000000000000000000000081526004016103b3929190611404565b60405180910390fd5b85853360008390508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b815260040161041491906112b3565b602060405180830381865afa158015610431573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104559190611442565b73ffffffffffffffffffffffffffffffffffffffff16146104a2576040517f94953b6000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600088116104dc576040517f096d7ecf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008a90503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1663081812fc8c6040518263ffffffff1660e01b815260040161053191906112b3565b602060405180830381865afa15801561054e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105729190611442565b73ffffffffffffffffffffffffffffffffffffffff16146105bf576040517f13e7d28d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405180604001604052808a81526020013373ffffffffffffffffffffffffffffffffffffffff168152506000808d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008c81526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050898b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fd547e933094f12a9159076970143ebe73234e64480317844b0dcb36117116de48c6040516106eb91906112b3565b60405180910390a45050505050505050505050565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811161077e576040517f668a7c4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060003373ffffffffffffffffffffffffffffffffffffffff16826040516107e9906114a0565b60006040518083038185875af1925050503d8060008114610826576040519150601f19603f3d011682016040523d82523d6000602084013e61082b565b606091505b5050905080610866576040517fa05884ba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b818160008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905060008160000151116109755782826040517f6d350f2200000000000000000000000000000000000000000000000000000000815260040161096c929190611404565b60405180910390fd5b60008060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000868152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090503481600001511115610a865785858260000151346040517f91978d35000000000000000000000000000000000000000000000000000000008152600401610a7d94939291906114b5565b60405180910390fd5b3460016000836020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ad99190611529565b925050819055506000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008681526020019081526020016000206000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550508573ffffffffffffffffffffffffffffffffffffffff166342842e0e826020015133886040518463ffffffff1660e01b8152600401610ba29392919061155d565b600060405180830381600087803b158015610bbc57600080fd5b505af1158015610bd0573d6000803e3d6000fd5b50505050848673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fcc3246b7731e448a11e00787c856701c959bf08fb8b0e642061061a3a63dfbd0846000015134604051610c38929190611594565b60405180910390a4505050505050565b818160008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090506000816000015111610d535782826040517f6d350f22000000000000000000000000000000000000000000000000000000008152600401610d4a929190611404565b60405180910390fd5b84843360008390508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b8152600401610dab91906112b3565b602060405180830381865afa158015610dc8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dec9190611442565b73ffffffffffffffffffffffffffffffffffffffff1614610e39576040517f94953b6000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008981526020019081526020016000206000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555050878973ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f33b700156ee7272e7a0b6b48d1c1832cb0e84e4e0adbe2d6dce742eed97c70af60405160405180910390a4505050505050505050565b828260008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050600081600001511161102b5782826040517f6d350f22000000000000000000000000000000000000000000000000000000008152600401611022929190611404565b60405180910390fd5b85853360008390508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b815260040161108391906112b3565b602060405180830381865afa1580156110a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110c49190611442565b73ffffffffffffffffffffffffffffffffffffffff1614611111576040517f94953b6000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b876000808c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b815260200190815260200160002060000181905550888a73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fd547e933094f12a9159076970143ebe73234e64480317844b0dcb36117116de48b6040516111c691906112b3565b60405180910390a450505050505050505050565b604051806040016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061123a8261120f565b9050919050565b61124a8161122f565b811461125557600080fd5b50565b60008135905061126781611241565b92915050565b6000602082840312156112835761128261120a565b5b600061129184828501611258565b91505092915050565b6000819050919050565b6112ad8161129a565b82525050565b60006020820190506112c860008301846112a4565b92915050565b6112d78161129a565b81146112e257600080fd5b50565b6000813590506112f4816112ce565b92915050565b600080604083850312156113115761131061120a565b5b600061131f85828601611258565b9250506020611330858286016112e5565b9150509250929050565b6113438161129a565b82525050565b6113528161122f565b82525050565b60408201600082015161136e600085018261133a565b5060208201516113816020850182611349565b50505050565b600060408201905061139c6000830184611358565b92915050565b6000806000606084860312156113bb576113ba61120a565b5b60006113c986828701611258565b93505060206113da868287016112e5565b92505060406113eb868287016112e5565b9150509250925092565b6113fe8161122f565b82525050565b600060408201905061141960008301856113f5565b61142660208301846112a4565b9392505050565b60008151905061143c81611241565b92915050565b6000602082840312156114585761145761120a565b5b60006114668482850161142d565b91505092915050565b600081905092915050565b50565b600061148a60008361146f565b91506114958261147a565b600082019050919050565b60006114ab8261147d565b9150819050919050565b60006080820190506114ca60008301876113f5565b6114d760208301866112a4565b6114e460408301856112a4565b6114f160608301846112a4565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006115348261129a565b915061153f8361129a565b9250828201905080821115611557576115566114fa565b5b92915050565b600060608201905061157260008301866113f5565b61157f60208301856113f5565b61158c60408301846112a4565b949350505050565b60006040820190506115a960008301856112a4565b6115b660208301846112a4565b939250505056fea2646970667358221220cc8fa1643c5e2494835d3a9cd59e3661ceb1b0bffc0283a5b1ab5ecbcbd0a72a64736f6c63430008110033",
  "deployedBytecode": "",
  "devdoc": {
    "author": "Zhengxing Li",
    "details": "需要防止重入攻击",
    "kind": "dev",
    "methods": {
      "buyItem(address,uint256)": {
        "details": "外部调用，并且需要支付需要防止重入攻击方法一：检查-生效-交互（Checks-Effects-Interactions）模式方法二：互斥锁 => openzeppelin",
        "params": {
          "nftAddress": "NFT 合约地址",
          "tokenId": "NFT tokenId"
        }
      },
      "cancelListing(address,uint256)": {
        "params": {
          "nftAddress": "NFT 合约地址",
          "tokenId": "NFT tokenId"
        }
      },
      "getListing(address,uint256)": {
        "params": {
          "nftAddress": "NFT 合约地址",
          "tokenId": "NFT tokenId"
        }
      },
      "listItem(address,uint256,uint256)": {
        "details": "上架，只能外部调用使用了 getApproved 方法，授予当前合约去出售卖家的 NFT",
        "params": {
          "nftAddress": "NFT 合约地址",
          "price": "NFT 价格",
          "tokenId": "NFT tokenId"
        }
      },
      "updateListing(address,uint256,uint256)": {
        "params": {
          "newPrice": "新的价格",
          "nftAddress": "NFT 合约地址",
          "tokenId": "NFT tokenId"
        }
      },
      "withdrawProceeds()": {
        "details": "防止重入攻击方法一：检查-生效-交互（Checks-Effects-Interactions）模式方法二：互斥锁 => openzeppelin"
      }
    },
    "title": "NFT 交易市场",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "buyItem(address,uint256)": {
        "notice": "这个方法用于购买市场上的 NFT"
      },
      "cancelListing(address,uint256)": {
        "notice": "这个方法用于下架你的 NFT"
      },
      "getListing(address,uint256)": {
        "notice": "这个方法用于获取市场上的 NFT"
      },
      "getProceeds(address)": {
        "notice": "这个方法用于获取卖家的收益"
      },
      "listItem(address,uint256,uint256)": {
        "notice": "这个方法用于将你的 NFT 上架到市场"
      },
      "updateListing(address,uint256,uint256)": {
        "notice": "这个方法用于更新你的 NFT 的价格"
      },
      "withdrawProceeds()": {
        "notice": "这个方法用于卖家提取收益"
      }
    },
    "notice": "提供 NFT 的上架、下架、购买、更新和提取收益功能",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1695,
        "contract": "contracts/NftMarketplace.sol:NftMarketplace",
        "label": "s_listings",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Listing)1688_storage))"
      },
      {
        "astId": 1699,
        "contract": "contracts/NftMarketplace.sol:NftMarketplace",
        "label": "s_proceeds",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_struct(Listing)1688_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => struct NftMarketplace.Listing))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_struct(Listing)1688_storage)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_struct(Listing)1688_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct NftMarketplace.Listing)",
        "numberOfBytes": "32",
        "value": "t_struct(Listing)1688_storage"
      },
      "t_struct(Listing)1688_storage": {
        "encoding": "inplace",
        "label": "struct NftMarketplace.Listing",
        "members": [
          {
            "astId": 1685,
            "contract": "contracts/NftMarketplace.sol:NftMarketplace",
            "label": "price",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 1687,
            "contract": "contracts/NftMarketplace.sol:NftMarketplace",
            "label": "seller",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}